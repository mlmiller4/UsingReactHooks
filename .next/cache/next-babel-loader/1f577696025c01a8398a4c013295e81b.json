{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ML Miller\\\\Documents\\\\Training\\\\UsingReactHooks\\\\src\\\\SignMeUp.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { ConfigContext } from \"./App\";\n\nconst SignMeUp = ({\n  signupCallback\n}) => {\n  useEffect(() => {\n    console.log(`SignMeUp:useEffect called`);\n  });\n  const {\n    0: email,\n    1: setEmail\n  } = useState();\n  const {\n    0: emailValid,\n    1: setEmailValid\n  } = useState(false);\n  const {\n    0: sendProcessing,\n    1: setSendProcessing\n  } = useState(false);\n  const context = useContext(ConfigContext);\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  const notify = () => {\n    toast.info(`You will be notified of upcoming events ${email}`);\n  };\n\n  function sendEmailToBackend() {\n    setSendProcessing(true);\n    new Promise(function (resolve) {\n      setTimeout(function () {\n        setSendProcessing(false);\n        setEmail(\"\");\n        resolve();\n      }, 1000);\n    }).then(() => {\n      notify();\n      signupCallback(email);\n      setEmail(\"\");\n    });\n  }\n\n  const buttonText = sendProcessing ? \"processing...\" : \"Get Updates\"; //console.log(\"src/SignMeUp called\");\n\n  return context.showSignMeUp === false(__jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    value: email,\n    onChange: e => {\n      setEmailValid(validateEmail(e.target.value));\n      return setEmail(e.target.value);\n    },\n    placeholder: \"Enter Email\",\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), \"\\xA0\", __jsx(\"button\", {\n    disabled: !emailValid || sendProcessing,\n    className: \"btn\",\n    onClick: sendEmailToBackend,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, buttonText)))));\n};\n\nexport default SignMeUp;","map":{"version":3,"sources":["C:/Users/ML Miller/Documents/Training/UsingReactHooks/src/SignMeUp.js"],"names":["React","useState","useEffect","useContext","ToastContainer","toast","ConfigContext","SignMeUp","signupCallback","console","log","email","setEmail","emailValid","setEmailValid","sendProcessing","setSendProcessing","context","validateEmail","re","test","notify","info","sendEmailToBackend","Promise","resolve","setTimeout","then","buttonText","showSignMeUp","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,uCAAP;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AACvCN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAa,2BAAb;AACD,GAFQ,CAAT;AAIA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACY,UAAD;AAAA,OAAaC;AAAb,MAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACc,cAAD;AAAA,OAAiBC;AAAjB,MAAsCf,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAMgB,OAAO,GAAGd,UAAU,CAACG,aAAD,CAA1B;;AAEA,WAASY,aAAT,CAAuBP,KAAvB,EAA8B;AAC5B,UAAMQ,EAAE,GAAG,2JAAX;AACA,WAAOA,EAAE,CAACC,IAAH,CAAQT,KAAR,CAAP;AACD;;AAED,QAAMU,MAAM,GAAG,MAAM;AACnBhB,IAAAA,KAAK,CAACiB,IAAN,CAAY,2CAA0CX,KAAM,EAA5D;AACD,GAFD;;AAIA,WAASY,kBAAT,GAA8B;AAC5BP,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,QAAIQ,OAAJ,CAAY,UAASC,OAAT,EAAkB;AAC5BC,MAAAA,UAAU,CAAC,YAAW;AACpBV,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAJ,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAa,QAAAA,OAAO;AACR,OAJS,EAIP,IAJO,CAAV;AAKD,KAND,EAMGE,IANH,CAMQ,MAAM;AACZN,MAAAA,MAAM;AACNb,MAAAA,cAAc,CAACG,KAAD,CAAd;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAVD;AAWD;;AAED,QAAMgB,UAAU,GAAGb,cAAc,GAAG,eAAH,GAAqB,aAAtD,CAnCuC,CAqCvC;;AAEA,SAAOE,OAAO,CAACY,YAAR,KAAyB,MAC9B;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAElB,KADT;AAEE,IAAA,QAAQ,EAAEmB,CAAC,IAAI;AACbhB,MAAAA,aAAa,CAACI,aAAa,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,CAAb;AACA,aAAOpB,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,KALH;AAME,IAAA,WAAW,EAAC,aANd;AAOE,IAAA,IAAI,EAAC,OAPP;AAQE,IAAA,IAAI,EAAC,OARP;AASE,IAAA,QAAQ,MATV;AAUE,IAAA,QAAQ,MAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,UAcE;AACE,IAAA,QAAQ,EAAE,CAACnB,UAAD,IAAeE,cAD3B;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,OAAO,EAAEQ,kBAHX;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGK,UANH,CAdF,CAFF,CADF,CAD8B,CAAhC;AA8BD,CArED;;AAuEA,eAAerB,QAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { ConfigContext } from \"./App\";\r\n\r\nconst SignMeUp = ({ signupCallback }) => {\r\n  useEffect(() => {\r\n    console.log(`SignMeUp:useEffect called`);\r\n  });\r\n\r\n  const [email, setEmail] = useState();\r\n  const [emailValid, setEmailValid] = useState(false);\r\n  const [sendProcessing, setSendProcessing] = useState(false);\r\n\r\n  const context = useContext(ConfigContext);\r\n\r\n  function validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n  const notify = () => {\r\n    toast.info(`You will be notified of upcoming events ${email}`);\r\n  };\r\n\r\n  function sendEmailToBackend() {\r\n    setSendProcessing(true);\r\n    new Promise(function(resolve) {\r\n      setTimeout(function() {\r\n        setSendProcessing(false);\r\n        setEmail(\"\");\r\n        resolve();\r\n      }, 1000);\r\n    }).then(() => {\r\n      notify();\r\n      signupCallback(email);\r\n      setEmail(\"\");\r\n    });\r\n  }\r\n\r\n  const buttonText = sendProcessing ? \"processing...\" : \"Get Updates\";\r\n\r\n  //console.log(\"src/SignMeUp called\");\r\n\r\n  return context.showSignMeUp === false(\r\n    <div className=\"container\">\r\n      <div>\r\n        <ToastContainer />\r\n        <div className=\"content\">\r\n          <input\r\n            value={email}\r\n            onChange={e => {\r\n              setEmailValid(validateEmail(e.target.value));\r\n              return setEmail(e.target.value);\r\n            }}\r\n            placeholder=\"Enter Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n            required\r\n          />\r\n          &nbsp;\r\n          <button\r\n            disabled={!emailValid || sendProcessing}\r\n            className=\"btn\"\r\n            onClick={sendEmailToBackend}\r\n            type=\"submit\"\r\n          >\r\n            {buttonText}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignMeUp;"]},"metadata":{},"sourceType":"module"}