{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst SignMeUp = ({\n  signupCallback\n}) => {\n  useEffect(() => {\n    console.log(`SignMeUp:useEffect called`);\n  });\n  const {\n    0: email,\n    1: setEmail\n  } = useState();\n  const {\n    0: emailValid,\n    1: setEmailValid\n  } = useState(false);\n  const {\n    0: sendProcessing,\n    1: setSendProcessing\n  } = useState(false);\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  const notify = () => {\n    toast.info(`You will be notified of upcoming events ${email}`);\n  };\n\n  function sendEmailToBackend() {\n    setSendProcessing(true);\n    new Promise(function (resolve) {\n      setTimeout(function () {\n        setSendProcessing(false);\n        setEmail(\"\");\n        resolve();\n      }, 1000);\n    }).then(() => {\n      notify();\n      signupCallback(email);\n      setEmail(\"\");\n    });\n  }\n\n  const buttonText = sendProcessing ? \"processing...\" : \"Get Updates\"; //console.log(\"src/SignMeUp called\");\n\n  return __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", null, __jsx(ToastContainer, null), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"input\", {\n    value: email,\n    onChange: e => {\n      setEmailValid(validateEmail(e.target.value));\n      return setEmail(e.target.value);\n    },\n    placeholder: \"Enter Email\",\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    required: true\n  }), \"\\xA0\", __jsx(\"button\", {\n    disabled: !emailValid || sendProcessing,\n    className: \"btn\",\n    onClick: sendEmailToBackend,\n    type: \"submit\"\n  }, buttonText))));\n};\n\nexport default SignMeUp;","map":null,"metadata":{},"sourceType":"module"}